import whois
import requests
import datetime
import os

DOMAINS_TO_CHECK = [
    "tansiqlabs.com",
    "tansiqlabs.dev"
]

NOTIFY_DAYS = [60, 45, 30, 15, 7, 6, 5, 4, 3, 2, 1, 0]

# ‡ß©. ‡¶ì‡ßü‡ßá‡¶¨‡¶π‡ßÅ‡¶ï ‡¶á‡¶â‡¶Ü‡¶∞‡¶è‡¶≤ (GitHub Secrets ‡¶•‡ßá‡¶ï‡ßá ‡¶Ü‡¶∏‡¶¨‡ßá)
WEBHOOK_URL = os.environ.get("WEBHOOK_URL")

# --- ‡¶Æ‡ßÇ‡¶≤ ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡ßç‡¶ü ---
    
def send_webhook(message):
    """‡¶ì‡ßü‡ßá‡¶¨‡¶π‡ßÅ‡¶ï‡ßá ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡ßü"""
    if not WEBHOOK_URL:
        print("WEBHOOK_URL ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§ GitHub Secret ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø?")
        return
    try:
        payload = {"content": message} # Discord-‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø 'content', Slack-‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø 'text'
        requests.post(WEBHOOK_URL, json=payload)
        print(f"‡¶ì‡ßü‡ßá‡¶¨‡¶π‡ßÅ‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡ßü‡ßá‡¶õ‡ßá: {message}")
    except Exception as e:
        print(f"‡¶ì‡ßü‡ßá‡¶¨‡¶π‡ßÅ‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá: {e}")

def check_domains():
    """‡¶°‡ßã‡¶Æ‡ßá‡¶á‡¶®‡ßá‡¶∞ ‡¶Æ‡ßá‡ßü‡¶æ‡¶¶ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßá"""
    today = datetime.datetime.now()
    alerts = [] # ‡¶∏‡¶¨ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶∞‡ßç‡¶ü ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶ú‡¶Æ‡¶æ ‡¶π‡¶¨‡ßá

    print(f"‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: {today.date()}. ‡¶°‡ßã‡¶Æ‡ßá‡¶á‡¶® ‡¶ö‡ßá‡¶ï ‡¶∂‡ßÅ‡¶∞‡ßÅ...")

    for domain_name in DOMAINS_TO_CHECK:
        try:
            w = whois.whois(domain_name)
            
            # WHOIS ‡¶≤‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡¶∞‡¶ø ‡¶ï‡¶ñ‡¶®‡ßã ‡¶è‡¶ï‡¶ü‡¶ø ‡¶°‡ßá‡¶ü, ‡¶ï‡¶ñ‡¶®‡ßã ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶™‡¶æ‡¶†‡¶æ‡ßü
            expiry_date = w.expiration_date
            if isinstance(expiry_date, list):
                expiry_date = expiry_date[0] # ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡¶ü‡¶ø ‡¶®‡¶ø‡¶ö‡ßç‡¶õ‡¶ø

            if expiry_date:
                time_left = expiry_date - today
                days_left = time_left.days
                
                print(f"‡¶°‡ßã‡¶Æ‡ßá‡¶á‡¶®: {domain_name}, ‡¶Æ‡ßá‡ßü‡¶æ‡¶¶ ‡¶Ü‡¶õ‡ßá: {days_left} ‡¶¶‡¶ø‡¶® (‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: {expiry_date.date()})")

                # ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶∞‡ßç‡¶ü ‡¶∂‡¶ø‡¶°‡¶ø‡¶â‡¶≤ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
                if days_left in NOTIFY_DAYS:
                    alert_message = f"üö® **‡¶°‡ßã‡¶Æ‡ßá‡¶á‡¶® ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶∞‡ßç‡¶ü** üö®\n`{domain_name}`-‡¶è‡¶∞ ‡¶Æ‡ßá‡ßü‡¶æ‡¶¶ **{days_left}** ‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶∂‡ßá‡¶∑ ‡¶π‡¶¨‡ßá!\n(‡¶Æ‡ßá‡ßü‡¶æ‡¶¶ ‡¶∂‡ßá‡¶∑ ‡¶π‡¶ì‡ßü‡¶æ‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: {expiry_date.date()})"
                    alerts.append(alert_message)
                
            else:
                print(f"'{domain_name}'-‡¶è‡¶∞ ‡¶Æ‡ßá‡ßü‡¶æ‡¶¶ ‡¶∂‡ßá‡¶∑ ‡¶π‡¶ì‡ßü‡¶æ‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§")

        except Exception as e:
            print(f"'{domain_name}' ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá: {e}")
            alerts.append(f"‚ùå `{domain_name}` ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶∏‡¶Æ‡ßç‡¶≠‡¶¨ ‡¶π‡ßü‡¶®‡¶ø‡•§ Error: {e}")

    # ‡¶Ø‡¶¶‡¶ø ‡¶ï‡ßã‡¶®‡ßã ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶∞‡ßç‡¶ü ‡¶•‡¶æ‡¶ï‡ßá, ‡¶§‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶ø‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶ì‡ßü‡ßá‡¶¨‡¶π‡ßÅ‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶¨‡ßá
    if alerts:
        final_message = "\n\n".join(alerts)
        send_webhook(final_message)
    else:
        print("‡¶∏‡¶¨ ‡¶°‡ßã‡¶Æ‡ßá‡¶á‡¶®‡ßá‡¶∞ ‡¶Æ‡ßá‡ßü‡¶æ‡¶¶ ‡¶†‡¶ø‡¶ï ‡¶Ü‡¶õ‡ßá‡•§ ‡¶ï‡ßã‡¶®‡ßã ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶∞‡ßç‡¶ü ‡¶®‡ßá‡¶á‡•§")

if __name__ == "__main__":
    check_domains()